//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SearchServiceClient.DoService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IssueDocument", Namespace="http://schemas.datacontract.org/2004/07/TeamDoWebService.Contracts")]
    [System.SerializableAttribute()]
    public partial class IssueDocument : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AssignedCUDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescLastField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DestReminderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DestinationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAllDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IssueIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IssueIdPerCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ReadUsersBitIds1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ReadUsersBitIds2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReccurenceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AssignedCUDate {
            get {
                return this.AssignedCUDateField;
            }
            set {
                if ((this.AssignedCUDateField.Equals(value) != true)) {
                    this.AssignedCUDateField = value;
                    this.RaisePropertyChanged("AssignedCUDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentOwner {
            get {
                return this.CurrentOwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentOwnerField, value) != true)) {
                    this.CurrentOwnerField = value;
                    this.RaisePropertyChanged("CurrentOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescLast {
            get {
                return this.DescLastField;
            }
            set {
                if ((object.ReferenceEquals(this.DescLastField, value) != true)) {
                    this.DescLastField = value;
                    this.RaisePropertyChanged("DescLast");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DestReminderDate {
            get {
                return this.DestReminderDateField;
            }
            set {
                if ((this.DestReminderDateField.Equals(value) != true)) {
                    this.DestReminderDateField = value;
                    this.RaisePropertyChanged("DestReminderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DestinationDate {
            get {
                return this.DestinationDateField;
            }
            set {
                if ((this.DestinationDateField.Equals(value) != true)) {
                    this.DestinationDateField = value;
                    this.RaisePropertyChanged("DestinationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAllDay {
            get {
                return this.IsAllDayField;
            }
            set {
                if ((this.IsAllDayField.Equals(value) != true)) {
                    this.IsAllDayField = value;
                    this.RaisePropertyChanged("IsAllDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IssueId {
            get {
                return this.IssueIdField;
            }
            set {
                if ((this.IssueIdField.Equals(value) != true)) {
                    this.IssueIdField = value;
                    this.RaisePropertyChanged("IssueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IssueIdPerCompany {
            get {
                return this.IssueIdPerCompanyField;
            }
            set {
                if ((this.IssueIdPerCompanyField.Equals(value) != true)) {
                    this.IssueIdPerCompanyField = value;
                    this.RaisePropertyChanged("IssueIdPerCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastOwner {
            get {
                return this.LastOwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.LastOwnerField, value) != true)) {
                    this.LastOwnerField = value;
                    this.RaisePropertyChanged("LastOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdate {
            get {
                return this.LastUpdateField;
            }
            set {
                if ((this.LastUpdateField.Equals(value) != true)) {
                    this.LastUpdateField = value;
                    this.RaisePropertyChanged("LastUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PriorityId {
            get {
                return this.PriorityIdField;
            }
            set {
                if ((this.PriorityIdField.Equals(value) != true)) {
                    this.PriorityIdField = value;
                    this.RaisePropertyChanged("PriorityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ReadUsersBitIds1 {
            get {
                return this.ReadUsersBitIds1Field;
            }
            set {
                if ((this.ReadUsersBitIds1Field.Equals(value) != true)) {
                    this.ReadUsersBitIds1Field = value;
                    this.RaisePropertyChanged("ReadUsersBitIds1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ReadUsersBitIds2 {
            get {
                return this.ReadUsersBitIds2Field;
            }
            set {
                if ((this.ReadUsersBitIds2Field.Equals(value) != true)) {
                    this.ReadUsersBitIds2Field = value;
                    this.RaisePropertyChanged("ReadUsersBitIds2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReccurenceId {
            get {
                return this.ReccurenceIdField;
            }
            set {
                if ((this.ReccurenceIdField.Equals(value) != true)) {
                    this.ReccurenceIdField = value;
                    this.RaisePropertyChanged("ReccurenceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusId {
            get {
                return this.StatusIdField;
            }
            set {
                if ((this.StatusIdField.Equals(value) != true)) {
                    this.StatusIdField = value;
                    this.RaisePropertyChanged("StatusId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DoService.ISearchService")]
    public interface ISearchService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/UpdateIndex", ReplyAction="http://tempuri.org/ISearchService/UpdateIndexResponse")]
        bool UpdateIndex(int taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISearchService/SearchText", ReplyAction="http://tempuri.org/ISearchService/SearchTextResponse")]
        IssueDocument[] SearchText(string searchString, string sort, int pageSize, int pageNumber);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISearchServiceChannel : ISearchService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchServiceClient : System.ServiceModel.ClientBase<ISearchService>, ISearchService {
        
        public SearchServiceClient() {
        }
        
        public SearchServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SearchServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SearchServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SearchServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool UpdateIndex(int taskId) {
            return base.Channel.UpdateIndex(taskId);
        }
        
        public IssueDocument[] SearchText(string searchString, string sort, int pageSize, int pageNumber) {
            return base.Channel.SearchText(searchString, sort, pageSize, pageNumber);
        }
    }
}
